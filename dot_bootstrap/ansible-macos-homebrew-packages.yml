---
- name: Install MacOS Packages
  hosts: localhost
  become: false
  vars:
    brew_cask_packages:
      - font-meslo-lg-nerd-font
      - font-symbols-only-nerd-font
      - wezterm

      # - visual-studio-code
      # - spotify
      - sublime-text
      # - google-drive
      # - iterm2
      # - macvim

    brew_packages:
      - git
      - font-meslo-lg-nerd-font
      - font-symbols-only-nerd-font
      - wget
      - mas
      - eza
      - ruby
      - zsh

# nvim
      - neovim
      - node
      - jesseduffield/lazygit/lazygit

# Yazi and dependencies
      - yazi 
      - ffmpegthumbnailer 
      - sevenzip 
      - jq 
      - poppler 
      - fd 
      - ripgrep 
      - fzf 
      - zoxide 
      - imagemagick
# Btop
      - btop
# tmux
      - tmux
#Stow
      - stow

    install_homebrew_if_missing: false
    # python_modules:
    #   - configparser
    #   - pylint
    #   - virtualenv
    upgrade_homebrew_packages: false

  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ brew_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists
    # - name: Installing Python Modules
    #   pip:
    #     name: "{{ item }}"
    #     state: present
    #   with_items: '{{ python_modules }}'
